name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x.x
          cache: npm
      - run: npm ci
      - run: npm run lint
      - run: npm run lint:types
      - run: exit 1  # Искусственная ошибка для проверки остановки деплоя

  check_lint_result:
    needs: lint
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - run: |
          echo "Lint result:"
          echo "${{ needs.lint.result }}"

  deploy_db:
    needs: lint
    runs-on: ubuntu-latest
    if: ${{ needs.lint.result == 'success' }}  # Проверка статуса задачи lint

    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.PRODUCTION_DB_PASSWORD }}
      SUPABASE_PROJECT_ID: ${{ secrets.PRODUCTION_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - run: supabase link --project-ref $SUPABASE_PROJECT_ID
      - run: supabase db push

  stop_cloudflare_deploy:
    needs: lint
    runs-on: ubuntu-latest
    if: ${{ needs.lint.result != 'success' }}  # Проверка статуса задачи lint

    steps:
      - run: |
          curl -X PUT "https://api.cloudflare.com/client/v4/zones/febebcd3cb65b8e6448eab269871e344/pause" \
            -H "Authorization: Bearer b185c7cbde5b55eed665a085348ea817ab24c" \
            -H "Content-Type: application/json" \
            --data '{"paused":true}'


      # - name: Install dependencies
      #   run: npm install

      # - name: Build project
      #   run: npx @cloudflare/next-on-pages@1

  # publish:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     deployments: write
  #   name: Publish to Cloudflare Pages
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     # Run a build step here if your project requires

  #     - name: Publish to Cloudflare Pages
  #       uses: cloudflare/pages-action@1
  #       with:
  #         apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  #         accountId: 2fe55ec2924319fd78ffefd0e3d213ff
  #         projectName: test
  #         directory: /
  #         gitHubToken: ${{ secrets.CLOUDFLARE_PAGES_GITHUB_TOKEN }}
